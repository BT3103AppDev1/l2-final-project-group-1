{
  "version": 3,
  "sources": ["../../vue-chartkick/dist/vue-chartkick.esm.js"],
  "sourcesContent": ["/*!\n * Vue Chartkick\n * Create beautiful JavaScript charts with one line of Vue\n * https://github.com/ankane/vue-chartkick\n * v1.1.0\n * MIT License\n */\n\nimport Chartkick from 'chartkick';\nimport { h } from 'vue';\n\nvar chartId = 1;\n\nvar createComponent = function(app, tagName, chartType) {\n  var chartProps = [\n    \"adapter\", \"bytes\", \"code\", \"colors\", \"curve\", \"dataset\", \"decimal\", \"discrete\", \"donut\", \"download\", \"empty\", \"label\",\n    \"legend\", \"library\", \"loading\", \"max\", \"messages\", \"min\", \"points\", \"precision\", \"prefix\", \"refresh\",\n    \"round\", \"stacked\", \"suffix\", \"thousands\", \"title\", \"xmax\", \"xmin\", \"xtitle\", \"ytitle\", \"zeros\"\n  ];\n  app.component(tagName, {\n    props: [\"data\", \"id\", \"width\", \"height\"].concat(chartProps),\n    render: function() {\n      // check if undefined so works with empty string\n      var loading = this.chartOptions.loading !== undefined ? this.chartOptions.loading : \"Loading...\";\n\n      // h() accepts VNodes,\n      // but limit to string since it may be used by Chartkick.js\n      if (typeof loading !== \"string\") {\n        throw new Error(\"loading must be a string\");\n      }\n\n      return h(\n        \"div\",\n        {\n          id: this.chartId,\n          style: this.chartStyle\n        },\n        [loading]\n      )\n    },\n    data: function() {\n      return {\n        chartId: null\n      }\n    },\n    computed: {\n      chartStyle: function() {\n        // hack to watch data and options\n        this.data;\n        this.chartOptions;\n\n        return {\n          height: this.height || \"300px\",\n          lineHeight: this.height || \"300px\",\n          width: this.width || \"100%\",\n          textAlign: \"center\",\n          color: \"#999\",\n          fontSize: \"14px\",\n          fontFamily: \"'Lucida Grande', 'Lucida Sans Unicode', Verdana, Arial, Helvetica, sans-serif\"\n        }\n      },\n      chartOptions: function() {\n        var options = {};\n        var props = chartProps;\n        for (var i = 0; i < props.length; i++) {\n          var prop = props[i];\n          if (this[prop] !== undefined) {\n            options[prop] = this[prop];\n          }\n        }\n        return options\n      }\n    },\n    created: function() {\n      this.chartId = this.chartId || this.id || (\"chart-\" + chartId++);\n    },\n    mounted: function() {\n      this.updateChart();\n    },\n    updated: function() {\n      this.updateChart();\n    },\n    beforeUnmount: function() {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n    },\n    methods: {\n      updateChart: function() {\n        if (this.data !== null) {\n          if (this.chart) {\n            this.chart.updateData(this.data, this.chartOptions);\n          } else {\n            this.chart = new chartType(this.chartId, this.data, this.chartOptions);\n          }\n        } else if (this.chart) {\n          this.chart.destroy();\n          this.chart = null;\n          this.$el.innerText = \"Loading...\";\n        }\n      }\n    }\n  });\n};\n\nChartkick.install = function(app, options) {\n  if (options && options.adapter) {\n    Chartkick.addAdapter(options.adapter);\n  }\n  createComponent(app, \"line-chart\", Chartkick.LineChart);\n  createComponent(app, \"pie-chart\", Chartkick.PieChart);\n  createComponent(app, \"column-chart\", Chartkick.ColumnChart);\n  createComponent(app, \"bar-chart\", Chartkick.BarChart);\n  createComponent(app, \"area-chart\", Chartkick.AreaChart);\n  createComponent(app, \"scatter-chart\", Chartkick.ScatterChart);\n  createComponent(app, \"geo-chart\", Chartkick.GeoChart);\n  createComponent(app, \"timeline\", Chartkick.Timeline);\n};\n\nexport default Chartkick;\n"],
  "mappings": "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",
  "names": []
}
